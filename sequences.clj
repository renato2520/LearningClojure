(ns com.clojure.examples
  (:gen-class))

;; ---------------------------- map -----------------------------------
(map inc [1 2 3])

(map (fn [x] (+ x 1)) '(1 2 3))

;; ---------------------------- reduce --------------------------------
(reduce + [1 2 3 4])

(reduce + -10 [1 2 3 4])

;; ---------------------------- into ----------------------------------
(into [] '(1 2 3))

(into (list) [1 2 3])

(into #{} [1 2 3])

(into [] #{1 2 3})

(into {} [[:a 1] [:b 2] [:c 3]])

(into [] {:a 1 :b 2 :c 3})

(reduce conj #{} [1 2 3])

;; ---------------------------- reverse -------------------------------
(reverse [1 2 3])

;; ---------------------------- iterate -------------------------------
(iterate + 0)

;; ---------------------------- range ---------------------------------
(range 5 10)

(range 0 100 5)

;; ---------------------------- repeatedly ----------------------------
(repeatedly 5 (fn [] (println "hi!")))

;; ---------------------------- doseq ---------------------------------
(doseq [animal ["cat" "dog" "horse"]] (println animal))

(doseq [n1 [1 2 3]
        n2 [4 5 6]]
  (println (+ n1 n2)))

;; ---------------------------- take ----------------------------------
(take 5 (range 0 100))

(take 10 (range 0 5))

;; ---------------------------- take-while ----------------------------


